trigger:
  - dev

pool:
  vmImage: 'ubuntu-latest'

variables:
  azure_subscription_id: "15e60859-88d7-4c84-943f-55488479910c"
  azure_client_id: "9a7b7fdd-5a88-46e3-8d9b-b78042012e30"
  azure_client_secret: "s6h8Q~WNY_QKu92SobDd7FnfSIWJsYSYmKeF2dw0"
  azure_tenant_id: "fd3a4a13-0cd8-4c1c-ba4c-e4995f5ee282"
  terraformVersion: '1.3.5'
  location: "East US"
  node_count: 2
  log_analytics_sku: "PerGB2018"

  resource_group_name: "Goreg4"
  aks_name: "goreg4-aks"
  log_analytics_workspace_name: "goreg4-analytics"
  grafana_name: "Goreg4-Grafana"

stages:
  - stage: EnableManagedPrometheusMetrics
    displayName: 'Enable Managed Prometheus Metrics'
    jobs:
      - job: EnablePrometheus
        displayName: 'Enable Managed Prometheus in AKS'
        steps:
          - script: |
              az login --service-principal -u $(azure_client_id) -p $(azure_client_secret) --tenant $(azure_tenant_id)
              az account set --subscription $(azure_subscription_id)

              az aks update --resource-group $(resource_group_name) --name $(aks_name) --enable-msi-auth-for-monitoring
              az aks update --resource-group $(resource_group_name) --name $(aks_name) --enable-prometheus-monitoring

              az aks show --resource-group $(resource_group_name) --name $(aks_name) --query "addonProfiles.prometheus"
            displayName: 'Enable Managed Prometheus Metrics'

  - stage: SetupGrafana
    displayName: 'Create Managed Grafana in Azure'
    jobs:
      - job: CreateGrafana
        displayName: 'Ensure Managed Grafana Exists'
        steps:
          - script: |
              az login --service-principal -u $(azure_client_id) -p $(azure_client_secret) --tenant $(azure_tenant_id)
              az account set --subscription $(azure_subscription_id)

              if ! az grafana show --name $(grafana_name) --resource-group $(resource_group_name) &> /dev/null; then
                az grafana create --name $(grafana_name) --resource-group $(resource_group_name) --location "eastus"
              fi
            displayName: 'Create Grafana if not exists'

  - stage: LinkGrafanaToPrometheus
    displayName: 'Link Grafana to Managed Prometheus'
    jobs:
      - job: LinkGrafana
        displayName: 'Configure Grafana Data Source'
        steps:
          - script: |
              az login --service-principal -u $(azure_client_id) -p $(azure_client_secret) --tenant $(azure_tenant_id)
              az account set --subscription $(azure_subscription_id)

              PROMETHEUS_URL=$(az aks show --resource-group $(resource_group_name) --name $(aks_name) --query "addonProfiles.prometheus.config.prometheusEndpoint" -o tsv)

              if [ -z "$PROMETHEUS_URL" ]; then
                az aks enable-addons --resource-group $(resource_group_name) --name $(aks_name) --addons monitoring
                sleep 60
                PROMETHEUS_URL=$(az aks show --resource-group $(resource_group_name) --name $(aks_name) --query "addonProfiles.prometheus.config.prometheusEndpoint" -o tsv)
              fi

              sleep 30

              az grafana data-source create --name $(grafana_name) --resource-group $(resource_group_name) --definition '{
                  "name": "Azure Monitor Prometheus",
                  "type": "prometheus",
                  "access": "proxy",
                  "url": "'$PROMETHEUS_URL'",
                  "isDefault": true
              }'

              az grafana data-source list --name $(grafana_name) --resource-group $(resource_group_name)
            displayName: 'Configure Grafana Data Source'
