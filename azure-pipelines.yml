trigger:
  - dev

pool:
  vmImage: 'ubuntu-latest'

variables:
  azure_subscription_id: "15e60859-88d7-4c84-943f-55488479910c"
  azure_client_id: "9a7b7fdd-5a88-46e3-8d9b-b78042012e30"
  azure_client_secret: "s6h8Q~WNY_QKu92SobDd7FnfSIWJsYSYmKeF2dw0"
  location: "East US"

  resource_group_name: "Goreg4"
  log_analytics_workspace_name: "goreg4-analytics"
  app_insights_name: "Goreg4-AppInsights"
  saved_query_name: "ErrorLogsQuery"

stages:
- stage: SetupMonitoring
  displayName: 'Enable Application Insights and Logs'
  jobs:
    - job: EnableInsights
      displayName: 'Create and Link Application Insights'
      steps:
        - script: |
            echo "üîë Logging into Azure..."
            az login --service-principal -u $(azure_client_id) -p $(azure_client_secret) --tenant $(azure_tenant_id)
            az account set --subscription $(azure_subscription_id)

            echo "üîé Checking if Application Insights exists..."
            app_insights_exists=$(az monitor app-insights component show \
              --app "$(app_insights_name)" \
              --resource-group "$(resource_group_name)" \
              --query "id" -o tsv 2>/dev/null || echo "")

            if [ -z "$app_insights_exists" ]; then
              echo "‚ö†Ô∏è Application Insights not found. Creating it..."
              az monitor app-insights component create \
                --app "$(app_insights_name)" \
                --location "$(location)" \
                --kind "web" \
                --resource-group "$(resource_group_name)" \
                --application-type "web" \
                --workspace "$(log_analytics_workspace_name)"
              echo "‚úÖ Application Insights created successfully."
            else
              echo "‚úÖ Application Insights already exists."
            fi

            echo "üîé Getting Log Analytics Workspace ID..."
            workspace_id=$(az monitor log-analytics workspace show \
              --resource-group "$(resource_group_name)" \
              --workspace-name "$(log_analytics_workspace_name)" \
              --query "customerId" -o tsv)

            if [ -z "$workspace_id" ]; then
              echo "‚ùå Failed to get Log Analytics Workspace ID"
              exit 1
            fi

            echo "üîπ Creating a Predefined KQL Query..."
            az monitor log-analytics saved-search create \
              --resource-group "$(resource_group_name)" \
              --workspace-name "$(log_analytics_workspace_name)" \
              --name "$(saved_query_name)" \
              --category "ErrorLogs" \
              --display-name "Predefined Error Logs Query" \
              --query "
              union AppTraces, AppRequests, AppDependencies, AppExceptions, AppEvents
              | where Message contains 'Error' or SeverityLevel == 3
              | project timestamp, message, type, operation_Name, cloud_RoleInstance
              | order by timestamp desc"
            
            echo "‚úÖ Predefined KQL Query Added to Log Analytics."
          displayName: 'Create Application Insights and Add Predefined KQL Query'

- stage: FetchErrors
  displayName: 'Fetch All Errors from Logs'
  dependsOn: SetupMonitoring
  condition: always()
  jobs:
    - job: GetErrors
      displayName: 'Run KQL Queries to Fetch Errors'
      steps:
        - script: |
            echo "üîë Logging into Azure..."
            az login --service-principal -u $(azure_client_id) -p $(azure_client_secret) --tenant $(azure_tenant_id)
            az account set --subscription $(azure_subscription_id)

            echo "üîé Getting Log Analytics Workspace ID..."
            workspace_id=$(az monitor log-analytics workspace show \
              --resource-group "$(resource_group_name)" \
              --workspace-name "$(log_analytics_workspace_name)" \
              --query "customerId" -o tsv)

            if [ -z "$workspace_id" ]; then
              echo "‚ùå Failed to get Log Analytics Workspace ID"
              exit 1
            fi

            echo "üîé Running Predefined KQL Query from Logs..."
            query_result=$(az monitor log-analytics query \
              --workspace "$workspace_id" \
              --analytics-query "$(az monitor log-analytics saved-search show \
                --resource-group "$(resource_group_name)" \
                --workspace-name "$(log_analytics_workspace_name)" \
                --name "$(saved_query_name)" \
                --query "query" -o tsv)" \
              --output json 2>&1)

            if echo "$query_result" | grep -q '"tables": \[\]'; then
              echo "‚ö†Ô∏è No errors found in Application Insights."
            elif echo "$query_result" | grep -q 'SemanticError'; then
              echo "‚ùå KQL Query Error: Failed to fetch Application Insights logs."
              echo "$query_result"
            else
              echo "‚úÖ Application Insights Errors:"
              echo "$query_result" | jq .
            fi
          displayName: 'Run Predefined KQL Queries for Errors'
