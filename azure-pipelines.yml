trigger:
- main  # Change this to your branch if needed

pool:
  vmImage: 'ubuntu-latest'

variables:
  azure_subscription_id: 'YOUR_SUBSCRIPTION_ID'
  azure_client_id: 'YOUR_CLIENT_ID'
  azure_client_secret: 'YOUR_CLIENT_SECRET'
  azure_tenant_id: 'YOUR_TENANT_ID'
  resource_group: 'YOUR_RESOURCE_GROUP'
  app_insights_name: 'YOUR_APP_INSIGHTS_NAME'
  workspace_name: 'YOUR_LOG_ANALYTICS_WORKSPACE_NAME'
  query_name: 'PredefinedErrorQuery'

steps:

# ‚úÖ Step 1: Authenticate with Azure
- script: |
    az login --service-principal -u $(azure_client_id) -p $(azure_client_secret) --tenant $(azure_tenant_id)
    az account set --subscription $(azure_subscription_id)
  displayName: 'üîë Authenticate with Azure'

# ‚úÖ Step 2: Verify Application Insights Exists
- script: |
    app_id=$(az monitor app-insights component show --app $(app_insights_name) --resource-group $(resource_group) --query "appId" -o tsv)
    
    if [ -z "$app_id" ]; then
      echo "‚ùå ERROR: Application Insights $(app_insights_name) not found in $(resource_group)"
      exit 1
    else
      echo "‚úÖ Application Insights found: $app_id"
    fi
  displayName: 'üîé Verify Application Insights Exists'

# ‚úÖ Step 3: Get Log Analytics Workspace ID
- script: |
    workspace_id=$(az monitor log-analytics workspace show --resource-group $(resource_group) --workspace-name $(workspace_name) --query "customerId" -o tsv)
    
    if [ -z "$workspace_id" ]; then
      echo "‚ùå ERROR: Log Analytics Workspace $(workspace_name) not found in $(resource_group)"
      exit 1
    else
      echo "‚úÖ Log Analytics Workspace ID: $workspace_id"
    fi
  displayName: 'üîé Get Log Analytics Workspace ID'

# ‚úÖ Step 4: Create a Predefined KQL Query in Application Insights
- script: |
    kql_query="traces | where severityLevel == 3 | project timestamp, message, operation_Id | order by timestamp desc"
    
    az monitor app-insights api-key create --resource-group $(resource_group) --app $(app_insights_name) --api-key $(query_name) --read-properties "ReadTelemetry"
    
    az monitor app-insights component query --app $(app_insights_name) --analytics-query "$kql_query"
    
    echo "‚úÖ KQL Query Created: $query_name"
  displayName: 'üìå Create Predefined KQL Query'

# ‚úÖ Step 5: Run the KQL Query
- script: |
    results=$(az monitor app-insights query --app $(app_insights_name) --analytics-query "traces | where severityLevel == 3 | project timestamp, message, operation_Id | order by timestamp desc" -o table)

    if [ -z "$results" ]; then
      echo "‚ùå No errors found in Application Insights."
    else
      echo "‚úÖ Errors found in Application Insights:"
      echo "$results"
    fi
  displayName: 'üöÄ Run Predefined KQL Query'
