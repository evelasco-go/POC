trigger:
  - dev

pool:
  vmImage: 'ubuntu-latest'

variables:
  azure_subscription_id: "15e60859-88d7-4c84-943f-55488479910c"
  azure_client_id: "9a7b7fdd-5a88-46e3-8d9b-b78042012e30"
  azure_client_secret: "s6h8Q~WNY_QKu92SobDd7FnfSIWJsYSYmKeF2dw0"
  azure_tenant_id: "fd3a4a13-0cd8-4c1c-ba4c-e4995f5ee282"
  resource_group_name: "pcresource321"
  storage_account_name: "pcstorage321"
  container_name: "pctfstate321"
  aks_name: "POCAKSCluster321"
  node_count: 2
  location: "East US"
  log_analytics_workspace_name: "analytics321"
  log_analytics_sku: "PerGB2018"
  diagnostic_setting_name: "diagnostic321"
  terraformVersion: '1.3.5'

stages:
- stage: Terraform
  displayName: 'Terraform Stage'
  jobs:
  - job: Terraform
    displayName: 'Terraform Deployment'
    steps:
    - script: |
        curl -LO https://raw.githubusercontent.com/terraform-linters/tflint/master/install_linux.sh
        chmod +x install_linux.sh && ./install_linux.sh
        curl -sSL https://aka.ms/InstallAzureCLIDeb | sudo bash
        
        az login --service-principal -u $(azure_client_id) -p $(azure_client_secret) --tenant $(azure_tenant_id)
        az account set --subscription $(azure_subscription_id)
      displayName: 'Azure CLI Login'
    
    - script: |
        terraform init
      displayName: 'Terraform Init'

    - script: |
        terraform apply -auto-approve
      displayName: 'Terraform Apply'
      env:
        ARM_CLIENT_ID: $(azure_client_id)
        ARM_CLIENT_SECRET: $(azure_client_secret)
        ARM_TENANT_ID: $(azure_tenant_id)
        ARM_SUBSCRIPTION_ID: $(azure_subscription_id)

- stage: DeployMonitoring
  displayName: 'Deploy Monitoring Tools'
  dependsOn: Terraform
  jobs:
  - job: HelmDeployment
    displayName: 'Deploy Prometheus and Grafana via Helm'
    steps:
    - script: |
        az login --service-principal -u $(azure_client_id) -p $(azure_client_secret) --tenant $(azure_tenant_id)
        az account set --subscription $(azure_subscription_id)

        az aks get-credentials --resource-group $(resource_group_name) --name $(aks_name)

        curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash

        helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
        helm repo add grafana https://grafana.github.io/helm-charts
        helm repo update

        helm install prometheus prometheus-community/kube-prometheus-stack --namespace monitoring --create-namespace --wait
        helm install grafana grafana/grafana --namespace monitoring --set adminPassword='yourpassword' --set service.type=LoadBalancer --wait

        kubectl get pods -n monitoring
      displayName: 'Install Prometheus and Grafana via Helm'
      env:
        KUBECONFIG: $(Build.SourcesDirectory)/.kube/config
