trigger:
- main  # Change this to your branch if needed

pool:
  vmImage: 'ubuntu-latest'

variables:
  terraformVersion: '1.3.5'
  azureSubscription: 'Software Development (15e60859-88d7-4c84-943f-55488479910c)'  # Service Connection Name
  location: "East US"
  node_count: 2
  log_analytics_sku: "PerGB2018"

  resource_group_name: "Goreg4"
  storage_account_name: "goreg4"
  container_name: "goreg4container"
  aks_name: "goreg4-aks"
  log_analytics_workspace_name: "goreg4-analytics"
  diagnostic_setting_name: "goreg4-diagnostics"
  dcr_name: "PrometheusDCR"

stages:
- stage: Terraform_Deploy
  displayName: "Deploy Terraform Infrastructure"
  jobs:
  - job: Terraform
    displayName: "Run Terraform"
    steps:

    # ✅ Checkout the repository
    - checkout: self

    # ✅ Install Terraform
    - task: TerraformInstaller@1
      displayName: "Install Terraform"
      inputs:
        terraformVersion: $(terraformVersion)

    # ✅ Authenticate to Azure
    - task: AzureCLI@2
      displayName: "Azure Login"
      inputs:
        azureSubscription: $(azureSubscription)
        scriptType: bash
        scriptLocation: inlineScript
        inlineScript: |
          az login --identity || az login --service-principal -u $(AZURE_CLIENT_ID) -p $(AZURE_CLIENT_SECRET) --tenant $(AZURE_TENANT_ID)

    # ✅ Terraform Init
    - task: TerraformTaskV2@2
      displayName: "Terraform Init"
      inputs:
        command: 'init'
        workingDirectory: 'terraform'
        backendType: 'azurerm'
        backendServiceArm: $(azureSubscription)
        backendAzureRmResourceGroupName: $(resource_group_name)
        backendAzureRmStorageAccountName: $(storage_account_name)
        backendAzureRmContainerName: $(container_name)
        backendAzureRmKey: 'terraform.tfstate'

    # ✅ Terraform Plan
    - task: TerraformTaskV2@2
      displayName: "Terraform Plan"
      inputs:
        command: 'plan'
        workingDirectory: 'terraform'
        environmentServiceNameAzureRM: $(azureSubscription)

    # ✅ Terraform Apply (Auto Approve)
    - task: TerraformTaskV2@2
      displayName: "Terraform Apply"
      inputs:
        command: 'apply'
        workingDirectory: 'terraform'
        environmentServiceNameAzureRM: $(azureSubscription)
        commandOptions: '-auto-approve'

    # ✅ Enable Managed Prometheus
    - task: AzureCLI@2
      displayName: "Enable Managed Prometheus"
      inputs:
        azureSubscription: $(azureSubscription)
        scriptType: bash
        scriptLocation: inlineScript
        inlineScript: |
          az monitor metrics alert create --name "PrometheusAlert" \
          --resource-group $(resource_group_name) \
          --scopes "/subscriptions/$(azureSubscription)/resourceGroups/$(resource_group_name)/providers/Microsoft.ContainerService/managedClusters/$(aks_name)" \
          --condition "count Metrics.Namespace.value > 0" \
          --description "Alert when Prometheus is active" \
          --action-group "YourActionGroup"

    # ✅ Create Data Collection Rule (DCR)
    - task: AzureCLI@2
      displayName: "Create Data Collection Rule (DCR)"
      inputs:
        azureSubscription: $(azureSubscription)
        scriptType: bash
        scriptLocation: inlineScript
        inlineScript: |
          az monitor data-collection rule create \
          --resource-group $(resource_group_name) \
          --name $(dcr_name) \
          --location $(location) \
          --description "Data Collection Rule for Prometheus"

    # ✅ Enable Prometheus Recording Rules
    - task: AzureCLI@2
      displayName: "Enable Prometheus Recording Rules"
      inputs:
        azureSubscription: $(azureSubscription)
        scriptType: bash
        scriptLocation: inlineScript
        inlineScript: |
          az monitor metrics alert create --name "PrometheusRecordingRules" \
          --resource-group $(resource_group_name) \
          --scopes "/subscriptions/$(azureSubscription)/resourceGroups/$(resource_group_name)/providers/Microsoft.ContainerService/managedClusters/$(aks_name)" \
          --condition "count Metrics.Prometheus.value > 0" \
          --description "Recording Rules enabled for Prometheus"
