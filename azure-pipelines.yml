trigger: none

variables:
  AZURE_CLIENT_ID: '9a7b7fdd-5a88-46e3-8d9b-b78042012e30'
  AZURE_TENANT_ID: 'fd3a4a13-0cd8-4c1c-ba4c-e4995f5ee282'
  AZURE_CLIENT_SECRET: 's6h8Q~WNY_QKu92SobDd7FnfSIWJsYSYmKeF2dw0'
  AZURE_SUBSCRIPTION_ID: '15e60859-88d7-4c84-943f-55488479910c'
  azure_subscription: 'Software Development (15e60859-88d7-4c84-943f-55488479910c)'
  RESOURCE_GROUP_NAME: "MyResourceGroup"
  STORAGE_ACCOUNT_NAME: "mystorageacct123"
  CONTAINER_NAME: "tfstate"
  LOCATION: "East US"
  NODE_COUNT: 2
  AKS_NAME: "MyAKSCluster"

stages:
- stage: CreateResources
  displayName: "Create Azure Resources"
  jobs:
  - job: CreateAzureResources
    displayName: "Create Resource Group and Storage Account"
    steps:
    - task: AzureCLI@2
      inputs:
        azureSubscription: '$(azure_subscription)'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          # Create Resource Group
          az group create --name ${{ variables.RESOURCE_GROUP_NAME }} --location ${{ variables.LOCATION }}

          # Create Storage Account
          az storage account create \
            --name ${{ variables.STORAGE_ACCOUNT_NAME }} \
            --resource-group ${{ variables.RESOURCE_GROUP_NAME }} \
            --location ${{ variables.LOCATION }} \
            --sku Standard_LRS

          # Create a container for Terraform state
          az storage container create \
            --name ${{ variables.CONTAINER_NAME }} \
            --account-name ${{ variables.STORAGE_ACCOUNT_NAME }}

- stage: TerraformInit
  displayName: "Initialize Terraform"
  jobs:
    - job: TerraformInitJob
      displayName: "Terraform Init"
      steps:
        - script: |
            az login --service-principal -u ${{ variables.AZURE_CLIENT_ID }} -p ${{ variables.AZURE_CLIENT_SECRET }} --tenant ${{ variables.AZURE_TENANT_ID }}
            terraform init -reconfigure
          displayName: "Run Terraform Init"

- stage: TerraformPlan
  displayName: "Plan Infrastructure"
  dependsOn: TerraformInit
  jobs:
    - job: TerraformPlanJob
      displayName: "Run Terraform Plan"
      steps:
        - script: |
            az login --service-principal -u ${{ variables.AZURE_CLIENT_ID }} -p ${{ variables.AZURE_CLIENT_SECRET }} --tenant ${{ variables.AZURE_TENANT_ID }}
            terraform plan -out=tfplan
          displayName: "Run Terraform Plan"
        - task: PublishPipelineArtifact@1
          inputs:
            targetPath: 'tfplan'
            artifactName: 'tfplan'
            publishLocation: 'pipeline'
          displayName: "Upload Terraform Plan Artifact"

- stage: TerraformApply
  displayName: "Apply Infrastructure"
  dependsOn: TerraformPlan
  condition: succeeded()
  jobs:
    - job: TerraformApplyJob
      displayName: "Run Terraform Apply"
      steps:
        - task: DownloadPipelineArtifact@2
          inputs:
            artifactName: 'tfplan'
            targetPath: '$(Pipeline.Workspace)/tfplan'
          displayName: "Download Terraform Plan Artifact"
        - script: |
            az login --service-principal -u ${{ variables.AZURE_CLIENT_ID }} -p ${{ variables.AZURE_CLIENT_SECRET }} --tenant ${{ variables.AZURE_TENANT_ID }}
            terraform apply -auto-approve $(Pipeline.Workspace)/tfplan
          displayName: "Run Terraform Apply"
