trigger:
  - dev

pool:
  vmImage: 'ubuntu-latest'

variables:
  azure_subscription_id: "15e60859-88d7-4c84-943f-55488479910c"
  azure_client_id: "9a7b7fdd-5a88-46e3-8d9b-b78042012e30"
  azure_client_secret: "s6h8Q~WNY_QKu92SobDd7FnfSIWJsYSYmKeF2dw0"
  azure_tenant_id: "fd3a4a13-0cd8-4c1c-ba4c-e4995f5ee282"
  location: "East US"
  resource_group_name: "Goreg4"
  aks_name: "goreg4-aks"

stages:
  - stage: EnableMetricsCollection
    displayName: 'Enable Metrics Collection for AKS Cluster'
    jobs:
      - job: EnableMetricsCollection
        steps:
        - script: |
            set -e
            echo "🔑 Logging into Azure..."
            az login --service-principal -u $(azure_client_id) -p $(azure_client_secret) --tenant $(azure_tenant_id)
            az account set --subscription $(azure_subscription_id)

            echo "🔄 Checking if Managed Prometheus is available..."
            FEATURE_STATE=$(az feature list --namespace "Microsoft.ContainerService" --query "[?name=='Microsoft.ContainerService/ManagedPrometheus'].properties.state" -o tsv || echo "NotFound")

            if [ -z "$FEATURE_STATE" ] || [ "$FEATURE_STATE" == "NotFound" ]; then
              echo "❌ Managed Prometheus feature is NOT available. Skipping..."
            else
              echo "🔄 Registering Managed Prometheus..."
              az feature register --namespace "Microsoft.ContainerService" --name "ManagedPrometheus"
              az feature wait --namespace "Microsoft.ContainerService" --name "ManagedPrometheus" --created

              echo "🔄 Registering Microsoft.ContainerService provider..."
              az provider register --namespace Microsoft.ContainerService

              echo "🔄 Enabling Managed Prometheus on AKS..."
              az aks enable-addons --addons monitoring --resource-group $(resource_group_name) --name $(aks_name) --enable-managed-prometheus
            fi
          displayName: 'Check and Enable Managed Prometheus'

