trigger:
  - dev

pool:
  vmImage: 'ubuntu-latest'

variables:
  azure_subscription_id: "15e60859-88d7-4c84-943f-55488479910c"
  azure_client_id: "9a7b7fdd-5a88-46e3-8d9b-b78042012e30"
  azure_client_secret: "s6h8Q~WNY_QKu92SobDd7FnfSIWJsYSYmKeF2dw0"
  azure_tenant_id: "fd3a4a13-0cd8-4c1c-ba4c-e4995f5ee282"
  location: "East US"
  resource_group_name: "Goreg4"
  aks_name: "goreg4-aks"

stages:
  - stage: EnableMetricsCollection
    displayName: 'Enable Metrics Collection for AKS Cluster'
    jobs:
      - job: EnableMetricsCollection
        steps:
        - script: |
            set -e  # Stop on error
            echo "ðŸ”‘ Logging into Azure..."
            az login --service-principal -u $(azure_client_id) -p $(azure_client_secret) --tenant $(azure_tenant_id)
            az account set --subscription $(azure_subscription_id)

            # Enable Azure Monitor (required for Managed Prometheus)
            echo "ðŸ”„ Enabling Azure Monitor for AKS..."
            az aks enable-addons --addons monitoring --resource-group $(resource_group_name) --name $(aks_name)

            # Enable Managed Prometheus via az resource update
            echo "ðŸ”„ Enabling Managed Prometheus..."
            az resource update --resource-group $(resource_group_name) \
              --name $(aks_name) --resource-type Microsoft.ContainerService/managedClusters \
              --set properties.addonProfiles.omsagent.config.enableManagedPrometheus=true

            echo "âœ… Managed Prometheus enabled successfully!"
          displayName: 'Enable Azure Monitor and Managed Prometheus'



