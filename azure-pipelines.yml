trigger:
  - dev

pool:
  vmImage: 'ubuntu-latest'

variables:
  azure_subscription_id: "15e60859-88d7-4c84-943f-55488479910c"
  azure_client_id: "9a7b7fdd-5a88-46e3-8d9b-b78042012e30"
  azure_client_secret: "s6h8Q~WNY_QKu92SobDd7FnfSIWJsYSYmKeF2dw0"
  azure_tenant_id: "fd3a4a13-0cd8-4c1c-ba4c-e4995f5ee282"
  location: "eastus"
  resource_group_name: "Goreg4"
  aks_name: "goreg4-aks"
  workspace_resource_id: "/subscriptions/$(azure_subscription_id)/resourceGroups/$(resource_group_name)/providers/Microsoft.OperationalInsights/workspaces/defaultazuremonitorworkspace-eus"  # Ensure this points to your existing Azure Monitor workspace.

stages:
  - stage: EnableMetricsCollection
    displayName: 'Enable Metrics Collection for AKS Cluster'
    jobs:
      - job: EnableMetricsCollection
        steps:
          - script: |
              set -e
              echo "ðŸ”‘ Logging into Azure..."
              az login --service-principal -u $(azure_client_id) -p $(azure_client_secret) --tenant $(azure_tenant_id)
              az account set --subscription $(azure_subscription_id)

              echo "ðŸ”„ Disabling monitoring addon if already enabled..."
              az aks disable-addons --addons monitoring --resource-group $(resource_group_name) --name $(aks_name) || echo "Monitoring addon not enabled previously."

              echo "ðŸ”„ Enabling Azure Monitor for containers..."
              az aks enable-addons --addons monitoring --resource-group $(resource_group_name) --name $(aks_name)

              echo "ðŸ”„ Enabling Managed Prometheus via feature registration..."
              az feature register --namespace Microsoft.ContainerService --name ManagedPrometheus
              echo "Waiting for feature registration to complete..."
              az feature wait --namespace Microsoft.ContainerService --name ManagedPrometheus

              # Ensure provider registration if needed
              echo "ðŸ”„ Registering Microsoft.ContainerService provider..."
              az provider register --namespace Microsoft.ContainerService

              echo "ðŸ”„ Enabling Managed Prometheus on AKS..."
              az aks enable-addons \
                --addons monitoring \
                --resource-group $(resource_group_name) \
                --name $(aks_name) \
                --enable-managed-prometheus \
                --workspace-resource-id $(workspace_resource_id)

              echo "ðŸ”„ Enabling Managed Grafana for visualization..."
              az aks enable-addons --addons monitoring --resource-group $(resource_group_name) --name $(aks_name) --enable-managed-grafana

              echo "âœ… Managed Prometheus and Grafana enabled successfully!"
            displayName: 'Enable Metrics Collection and Visualization'
