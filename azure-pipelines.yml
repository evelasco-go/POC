trigger:
  - dev

pool:
  vmImage: 'ubuntu-latest'

variables:
  azure_subscription_id: "15e60859-88d7-4c84-943f-55488479910c"
  azure_client_id: "9a7b7fdd-5a88-46e3-8d9b-b78042012e30"
  azure_client_secret: "s6h8Q~WNY_QKu92SobDd7FnfSIWJsYSYmKeF2dw0"
  azure_tenant_id: "fd3a4a13-0cd8-4c1c-ba4c-e4995f5ee282"
  terraformVersion: '1.3.5'
  node_count: 2
  location: "East US"
  log_analytics_sku: "PerGB2018"

  resource_group_name: "Goreg4"
  storage_account_name: "goreg4"
  container_name: "goreg4container"
  aks_name: "goreg4-aks"
  log_analytics_workspace_name: "goreg4-analytics"
  diagnostic_setting_name: "goreg4-diagnostics"

stages:
  - stage: DeployMonitoringStandalone
    displayName: 'Deploy Prometheus and Grafana without dependencies'
    jobs:
      - job: HelmDeployment
        displayName: 'Deploy Prometheus and Grafana via Helm'
        steps:
          - script: |
              # Log in to Azure
              az login --service-principal -u $(azure_client_id) -p $(azure_client_secret) --tenant $(azure_tenant_id)
              az account set --subscription $(azure_subscription_id)

              # Get AKS credentials
              az aks get-credentials --resource-group $(resource_group_name) --name $(aks_name)

              # Install Helm
              curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash

              # Add Helm repositories
              helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
              helm repo add grafana https://grafana.github.io/helm-charts
              helm repo update

              # Install Prometheus and Grafana
              helm install prometheus prometheus-community/kube-prometheus-stack --namespace monitoring --create-namespace --wait
              helm install grafana grafana/grafana --namespace monitoring --set adminPassword='yourpassword' --set service.type=LoadBalancer --wait

              # Verify pods
              kubectl get pods -n monitoring
            displayName: 'Install Prometheus and Grafana via Helm'

  - stage: EnableManagedPrometheusMetrics
    displayName: 'Enable Managed Prometheus Metrics'
    jobs:
      - job: EnablePrometheus
        displayName: 'Enable Managed Prometheus in AKS'
        steps:
          - script: |
              # Log in to Azure
              az login --service-principal -u $(azure_client_id) -p $(azure_client_secret) --tenant $(azure_tenant_id)
              az account set --subscription $(azure_subscription_id)

              # Enable Prometheus in Azure Monitor
              az aks update --resource-group $(resource_group_name) --name $(aks_name) --enable-addons monitoring --enable-prometheus

              # Verify Prometheus is enabled
              az aks show --resource-group $(resource_group_name) --name $(aks_name) --query "addonProfiles.omsagent.config.prometheus" -o json
            displayName: 'Enable Managed Prometheus Metrics'

  - stage: LinkGrafanaToPrometheus
    displayName: 'Link Azure Managed Prometheus to Grafana'
    jobs:
      - job: LinkGrafana
        displayName: 'Configure Grafana with Azure Monitor'
        steps:
          - script: |
              # Log in to Azure
              az login --service-principal -u $(azure_client_id) -p $(azure_client_secret) --tenant $(azure_tenant_id)
              az account set --subscription $(azure_subscription_id)

              # Get Grafana instance in Azure Monitor
              grafana_id=$(az grafana list --resource-group $(resource_group_name) --query "[0].id" -o tsv)

              if [ -z "$grafana_id" ]; then
                echo "No Azure Managed Grafana instance found. Creating one..."
                az grafana create --name "Goreg4-Grafana" --resource-group $(resource_group_name) --location $(location)
                grafana_id=$(az grafana show --name "Goreg4-Grafana" --resource-group $(resource_group_name) --query "id" -o tsv)
              fi

              echo "Grafana instance found: $grafana_id"

              # Link Grafana to Azure Monitor Managed Prometheus
              az grafana update --name "Goreg4-Grafana" --resource-group $(resource_group_name) --add dataSources name="Azure Monitor" type="prometheus" access="proxy" url="https://$(aks_name).prometheus.monitoring.azure.com" isDefault=true

              # Verify that Grafana is linked
              az grafana show --name "Goreg4-Grafana" --resource-group $(resource_group_name) --query "properties.dataSources" -o json
            displayName: 'Link Grafana to Managed Prometheus'
