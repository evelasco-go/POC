trigger:
  - dev

pool:
  vmImage: 'ubuntu-latest'

variables:
  azure_subscription_id: "15e60859-88d7-4c84-943f-55488479910c"
  azure_client_id: "9a7b7fdd-5a88-46e3-8d9b-b78042012e30"
  azure_client_secret: "s6h8Q~WNY_QKu92SobDd7FnfSIWJsYSYmKeF2dw0"
  azure_tenant_id: "fd3a4a13-0cd8-4c1c-ba4c-e4995f5ee282"
  terraformVersion: '1.3.5'
  location: "East US"
  node_count: 2
  log_analytics_sku: "PerGB2018"
  resource_group_name: "Goreg4"
  aks_name: "goreg4-aks"

stages:
- stage: Terraform
  displayName: 'Terraform Stage'
  jobs:
  - job: Terraform
    displayName: 'Terraform Deployment'
    steps:
    - script: |
        curl -sSL https://aka.ms/InstallAzureCLIDeb | sudo bash
        az login --service-principal -u $(azure_client_id) -p $(azure_client_secret) --tenant $(azure_tenant_id)
        az account set --subscription $(azure_subscription_id)
      displayName: 'Azure CLI Login'

    # ✅ **Check if DCR exists in Azure**
    - script: |
        az monitor data-collection-rule list --resource-group $(resource_group_name) --query "[].name" -o table
      displayName: 'Check Existing Data Collection Rules'
    
    # ✅ **Check if Resource Group Location Matches**
    - script: |
        RG_LOCATION=$(az group show --name $(resource_group_name) --query "location" -o tsv)
        if [ "$RG_LOCATION" != "$(location)" ]; then
          echo "❌ Resource Group Location Mismatch: $RG_LOCATION != $(location)"
          exit 1
        else
          echo "✅ Resource Group Location Matches: $RG_LOCATION"
        fi
      displayName: 'Validate Resource Group Location'

    # ✅ **Terraform Init**
    - script: |
        terraform init
      displayName: 'Terraform Init'

    # ✅ **Terraform Validate (Checks for Syntax Issues)**
    - script: |
        terraform validate
      displayName: 'Terraform Validate'

    # ✅ **Terraform Plan (Previews Changes)**
    - script: |
        terraform plan -out=tfplan
      displayName: 'Terraform Plan'
    
    # ✅ **Terraform Apply (Deploy Changes)**
    - script: |
        terraform apply -auto-approve
      displayName: 'Terraform Apply'
      env:
        ARM_CLIENT_ID: $(azure_client_id)
        ARM_CLIENT_SECRET: $(azure_client_secret)
        ARM_TENANT_ID: $(azure_tenant_id)
        ARM_SUBSCRIPTION_ID: $(azure_subscription_id)
