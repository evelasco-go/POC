trigger:
  - dev

pool:
  vmImage: 'ubuntu-latest'

variables:
  azure_subscription_id: "15e60859-88d7-4c84-943f-55488479910c"
  azure_client_id: "9a7b7fdd-5a88-46e3-8d9b-b78042012e30"
  azure_client_secret: "s6h8Q~WNY_QKu92SobDd7FnfSIWJsYSYmKeF2dw0"
  azure_tenant_id: "fd3a4a13-0cd8-4c1c-ba4c-e4995f5ee282"
  location: "eastus"
  resource_group_name: "Goreg4"
  aks_name: "goreg4-aks"
  monitor_workspace: "defaultazuremonitorworkspace-eus"
  ingestion_url: "https://defaultazuremonitorworkspace-eastus-964j.eastus-1.metrics.ingest.monitor.azure.com/dataCollectionRules/dcr-57a879c781d44ab38afebcb72da1944e/streams/Microsoft-PrometheusMetrics/api/v1/write?api-version=2023-04-24"

stages:
  - stage: EnablePrometheus
    displayName: 'Enable Prometheus'
    jobs:
      - job: EnablePrometheus
        steps:
          - script: |
              set -e
              echo "🔑 Logging into Azure..."
              az login --service-principal -u $(azure_client_id) -p $(azure_client_secret) --tenant $(azure_tenant_id)
              az account set --subscription $(azure_subscription_id)

              echo "🔄 Enabling Azure Monitor for AKS..."
              if az aks show --resource-group $(resource_group_name) --name $(aks_name) --query "addonProfiles.omsagent.enabled" -o tsv | grep -q "true"; then
                echo "✅ Azure Monitor is already enabled."
              else
                az aks enable-addons --addons monitoring --resource-group $(resource_group_name) --name $(aks_name) --workspace-resource-id "/subscriptions/$(azure_subscription_id)/resourceGroups/$(resource_group_name)/providers/Microsoft.OperationalInsights/workspaces/$(monitor_workspace)"
              fi

              echo "🔄 Enabling Managed Prometheus..."
              az aks update --resource-group $(resource_group_name) --name $(aks_name) --enable-azure-monitor-metrics

              echo "✅ Managed Prometheus enabled successfully!"
            displayName: 'Enable Prometheus'

  - stage: DeployPrometheus
    displayName: 'Deploy Prometheus'
    jobs:
      - job: DeployPrometheus
        steps:
          - script: |
              set -e
              echo "🔑 Logging into Azure..."
              az login --service-principal -u $(azure_client_id) -p $(azure_client_secret) --tenant $(azure_tenant_id)
              az account set --subscription $(azure_subscription_id)

              echo "🔄 Setting AKS context..."
              az aks get-credentials --resource-group $(resource_group_name) --name $(aks_name) --overwrite-existing

              echo "🔄 Verifying kubectl connection..."
              if ! kubectl cluster-info; then
                echo "❌ ERROR: Kubernetes cluster is not reachable."
                exit 1
              fi

              echo "🔄 Deploying Prometheus..."
              cat <<EOF | kubectl apply -f -
              apiVersion: apps/v1
              kind: Deployment
              metadata:
                name: prometheus
                namespace: monitoring
              spec:
                replicas: 1
                selector:
                  matchLabels:
                    app: prometheus
                template:
                  metadata:
                    labels:
                      app: prometheus
                  spec:
                    containers:
                    - name: prometheus
                      image: mcr.microsoft.com/azuremonitor/containerinsights/ciprod/prometheus-remote-write/images:prom-remotewrite-20240617.1
                      env:
                      - name: INGESTION_URL
                        value: "$(ingestion_url)"
                      - name: MANAGED_IDENTITY_CLIENT_ID
                        value: "$(azure_client_id)"
                      - name: CLUSTER_NAME
                        value: "$(aks_name)"
              EOF

              echo "✅ Prometheus deployment applied successfully!"
            displayName: 'Deploy Prometheus'
