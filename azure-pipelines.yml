
trigger:
  branches:
    include:
      - dev

variables:
  AZURE_CLIENT_ID: $(azure_client_id)
  AZURE_CLIENT_SECRET: $(azure_client_secret)
  AZURE_TENANT_ID: $(azure_tenant_id)
  AZURE_SUBSCRIPTION_ID: $(azure_subscription_id)
  azure_subscription: 'Software Development (15e60859-88d7-4c84-943f-55488479910c)'
  RESOURCE_GROUP_NAME: "MyResourceGroup"
  STORAGE_ACCOUNT_NAME: "mystorageacct123"
  CONTAINER_NAME: "tfstate"
  LOCATION: "East US"
  NODE_COUNT: 2
  AKS_NAME: "MyAKSCluster"

stages:
  - stage: CreateResources
    displayName: "Create Azure Resources"
    jobs:
      - job: CreateAzureResources
        displayName: "Create Resource Group and Storage Account"
        steps:
          - task: AzureCLI@2
            inputs:
              azureSubscription: '$(azure_subscription)'  # Service Connection Name
              scriptType: 'bash'
              scriptLocation: 'inlineScript'
              inlineScript: |
                # Create Resource Group
                az group create --name $RESOURCE_GROUP_NAME --location $LOCATION

                # Create Storage Account
                az storage account create \
                  --name $STORAGE_ACCOUNT_NAME \
                  --resource-group $RESOURCE_GROUP_NAME \
                  --location $LOCATION \
                  --sku Standard_LRS

                # Create Container
                az storage container create \
                  --name $CONTAINER_NAME \
                  --account-name $STORAGE_ACCOUNT_NAME

  - stage: TerraformInit
    displayName: "Initialize Terraform"
    dependsOn: CreateResources
    jobs:
      - job: TerraformInitJob
        displayName: "Initialize Terraform Backend"
        steps:
          - task: AzureCLI@2
            inputs:
              azureSubscription: '$(azure_subscription)'  # Service Connection Name
              scriptType: 'bash'
              scriptLocation: 'inlineScript'
              inlineScript: |
                terraform init -backend-config="storage_account_name=$STORAGE_ACCOUNT_NAME" \
                               -backend-config="container_name=$CONTAINER_NAME" \
                               -backend-config="key=terraform.tfstate" \
                               -backend-config="resource_group_name=$RESOURCE_GROUP_NAME" \
                               -backend-config="client_id=$AZURE_CLIENT_ID" \
                               -backend-config="client_secret=$AZURE_CLIENT_SECRET" \
                               -backend-config="tenant_id=$AZURE_TENANT_ID" \
                               -backend-config="subscription_id=$AZURE_SUBSCRIPTION_ID"

  - stage: TerraformPlan
    displayName: "Plan Infrastructure"
    dependsOn: TerraformInit
    jobs:
      - job: TerraformPlanJob
        displayName: "Run Terraform Plan"
        steps:
          - task: AzureCLI@2
            inputs:
              azureSubscription: '$(azure_subscription)'  # Service Connection Name
              scriptType: 'bash'
              scriptLocation: 'inlineScript'
              inlineScript: |
                terraform plan -out=tfplan

  - stage: TerraformApply
    displayName: "Apply Infrastructure"
    dependsOn: TerraformPlan
    condition: succeeded()
    jobs:
      - job: TerraformApplyJob
        displayName: "Run Terraform Apply"
        steps:
          - task: AzureCLI@2
            inputs:
              azureSubscription: '$(azure_subscription)'  # Service Connection Name
              scriptType: 'bash'
              scriptLocation: 'inlineScript'
              inlineScript: |
                terraform apply -auto-approve tfplan
